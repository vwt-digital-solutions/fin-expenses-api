openapi: 3.0.2
info:
  title: Expenses API
  version: '0.1'
  description: An API for the expenses app
  contact:
    name: VolkerWessels Telecom
    url: 'http://www.volkerwesselstelecom.com'
    email: info@vwt.digital
  license:
    name: GNU GPLv3
    url: 'https://www.gnu.org/licenses/gpl.txt'
  x-audience: company-internal
  x-api-id: 1b66bb9e-5b02-49f1-8cf9-bc3f649d70a6
servers:
  - url: /
paths:
  /employees/expenses:
    post:
      requestBody:
        $ref: '#/components/requestBodies/formData'
      responses:
        '201':
          description: Succesfully made or updated an expense
        default:
          description: Expense Made/Updated successfully!
      security:
        - oauth2: [finance.expenses]
      operationId: add_expense
      summary: Make expense
      description: Create an expense
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
  /employees/cost-types:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostTypes'
              examples:
                CostTypes:
                  value:
                    CostTypes:
                      - ctype: some text
                        cid: ''
          description: Succesfull response - returns all costtypes
        default:
          description: Cost Types retrieved successfully
      security:
        - oauth2: [finance.expenses]
      operationId: get_cost_types
      summary: Get all cost_types
      description: Retrieve all cost_types
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
  /employees/expenses/{expenses_id}/attachments:
    get:
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          description: Succesfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlArray'
      summary: Get attachments by expense id
      operationId: get_attachment_employee
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    post:
      requestBody:
        $ref: '#/components/requestBodies/attachmentData'
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          description: Succesfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlArray'
      summary: Get attachments by expense id
      operationId: add_attachment_employee
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: True
  /employees/expenses/{expenses_id}/attachments/{attachments_name}:
    delete:
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
        - $ref: '#/components/parameters/AttachmentName'
      responses:
        '200':
          description: Succesfully deleted attachment for expense
      summary: Delete attachment by expense id and attachment name
      operationId: delete_attachment
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: true
  /employees/{employee_id}/expenses:
    get:
      parameters:
        - $ref: '#/components/parameters/EmployeeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDataArray'
              examples:
                ExpenseDataArray:
                  value:
                    Expenses:
                      - amount: ''
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28Z
                      - amount: ''
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28Z
          description: Succesfull response - returns all expenses of a logged in employee
        default:
          description: Response Successfully Executed
      security:
        - oauth2: [finance.expenses]
      operationId: get_employee_expenses
      summary: Get all expenses belonging to a specific logged in employee
      description: Retrieve all expenses for a logged in employee
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
  '/employees/expenses/{expenses_id}':
    get:
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseData'
          description: Successful response - returns information of expense
        default:
          description: Expense Success
      security:
        - oauth2: [finance.expenses]
      operationId: get_expenses_employee
      summary: Get information from expenses by id
      description: Retrieve an expense
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    put:
      summary: Update expense
      operationId: update_expenses_employee
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          description: Updated expense
        default:
          description: Status of an expense has been updated
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: True
  '/finances/documents':
    get:
      operationId: get_document_list
      summary: Get a list of all booking and payment files
      responses:
        '200':
          description: Download Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingFile'
        '401':
          description: The unauthorized client is not allowed to access the authorization grant type.
        '400':
          description: A missing parameter or, unsupported parameter value.
        '403':
          description: The Access token does not have the required scope
        default:
          description: List of files got Successfully OK
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    post:
      operationId: create_booking_and_payment_file
      summary: Creates a single booking and payment document containing all expenses ready for payment.
      responses:
        '200':
          description: Download Success
        '401':
          description: The unauthorized client is not allowed to access the authorization grant type.
        '400':
          description: A missing parameter or, unsupported parameter value.
        '403':
          description: The Access token does not have the required scope
        default:
          description: Booking file made Successfully OK
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
  '/finances/expenses/documents/{document_id}/kinds/{document_type}':
    get:
      operationId: get_document
      summary: Returns a CSV => of a booking file or XML => of payment file
      parameters:
        - $ref: '#/components/parameters/DocumentId'
        - $ref: '#/components/parameters/DocumentType'
      responses:
        '200':
          description: Download Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingFile'
        '401':
          description: The unauthorized client is not allowed to access the authorization grant type.
        '400':
          description: A missing parameter or, unsupported parameter value.
        '403':
          description: The Access token does not have the required scope
        default:
          description: Document file successfully retrieved
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: True
  '/finances/expenses/{expenses_id}':
    put:
      summary: Update expense
      operationId: update_expenses_finance
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          description: Updated expense
        default:
          description: Status of an expense has been updated
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    get:
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseData'
          description: Successful response - returns information of expense
        default:
          description: Expense Success
      security:
        - oauth2: [creditor.write]
      operationId: get_expenses_finances
      summary: Get information from expenses by id
      description: Retrieve an expense
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: True
  /finances/expenses/{expenses_id}/attachments:
    get:
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          description: Succesfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlArray'
      summary: Get attachments by expense id
      operationId: get_attachment_finances_creditor
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: True
  /finances/expenses:
    get:
      parameters:
        - $ref: '#components/parameters/ExpensesList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDataArray'
              examples:
                ExpenseDataArray:
                  value:
                    Expenses:
                      - amount: ''
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28Z
                      - amount: ''
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-22T17:32:28Z
          description: Succesfull response - returns all expenses
        default:
          description: Response Successfully Executed
      security:
        - oauth2: [creditor.write]
      operationId: get_all_expenses
      summary: Get all expenses
      description: Retrieve all expenses
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
  /managers/expenses:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDataArray'
              examples:
                ExpenseDataArray:
                  value:
                    Expenses:
                      - amount: ''
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28Z
                      - amount: ''
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-22T17:32:28Z
          description: Succesfull response - returns all expenses
        default:
          description: Response Successfully Executed
      security:
        - oauth2: [finance.expenses]
      operationId: get_managers_expenses
      summary: Get all expenses for approval of a specific manager
      description: Retrieve all expenses for a given manager
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
  /managers/expenses/{expenses_id}:
    put:
      summary: Update expense
      operationId: update_expenses_manager
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          description: Updated expense
        default:
          description: Status of an expense has been updated
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: True
  /managers/expenses/{expenses_id}/attachments:
    get:
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          description: Succesfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlArray'
      summary: Get attachments by expense id
      operationId: get_attachment_finances_manager
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: True
  /controllers/expenses:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDataArray'
              examples:
                ExpenseDataArray:
                  value:
                    Expenses:
                      - amount: ''
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28Z
                      - amount: ''
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-22T17:32:28Z
          description: Succesfull response - returns all expenses
        default:
          description: Response Successfully Executed
      security:
        - oauth2: [controller.write]
      operationId: get_controller_expenses
      summary: Get all expenses
      description: Get all expenses for controllers
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: True
  /controllers/expenses/{expenses_id}/attachments:
    get:
      parameters:
        - $ref: '#/components/parameters/ExpensesId'
      responses:
        '200':
          description: Succesfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlArray'
      summary: Get attachments by expense id
      operationId: get_attachment_controllers
      security:
        - oauth2: [controller.write]
      x-openapi-router-controller: openapi_server.controllers.expense_controllers
    x-eac-ignore: True
components:
  schemas:
    Url:
      properties:
        url:
          type: string
      example:
        url: 'https://gcp.com/img.png'
    UrlArray:
      title: Root Type for UrlArray
      description: Array of urls of attachments
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Url'
    Status:
      description: Status for expense
      properties:
        status:
          type: string
          enum:
            - ready_for_creditor
            - ready_for_manager
            - rejected_by_manager
            - rejected_by_creditor
            - exported
            - cancelled
            - approved
            - payed
        creditor_note:
          type: string
        manager_note:
          type: string
        amount:
          format: decimal
          type: number
          minimum: 0.01
        note:
          type: string
        cost_type:
          type: string
        transaction_date:
          type: string
          format: date-time
          pattern: '^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3})Z$'
      required:
        - status
      example:
        status: 'rejected_by_creditor'
        finance_note: 'Wrong amount'
    AttachmentData:
      title: attachmentData
      description: form data for single attachment
      type: object
      properties:
        name:
          type: string
        content:
          type: string
          format: byte
          pattern: '(?<=data:)(image\/png|image\/jpeg|image\/jpg|application\/pdf)(?=;base64)'
      example: |-
        {
          "name": "somename",
          "content": "b64 string"
        }
    ExpenseData:
      title: expenseData
      description: Form data to an expense
      required:
        - amount
        - note
        - cost_type
        - transaction_date
      type: object
      properties:
        amount:
          format: decimal
          type: number
          minimum: 0.01
        note:
          type: string
        cost_type:
          type: string
        transaction_date:
          type: string
          format: date-time
          pattern: '^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3})Z$'
      example: |-
        {
            "note": "This is a note",
            "id": "R1rt2345",
            "amount": 45.56,
            "cost_type": "Office Utilities",
            "transaction_date": "2017-07-21T17:32:28Z"
        }
    ExpenseDataArray:
      title: Root Type for ExpenseDataArray
      description: Array of expense data
      type: object
      properties:
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseData'
      example:
        Expenses:
          - note: |
              This is a note
            id: |
              R1rt2345
            amount: 45.56
            cost_type: |
              This is a cost_type
            status: new
            transaction_date: 2017-07-21T17:32:28Z
          - note: |
              This is a notes
            id: |
              R1rt23f45
            amount: 45.16
            cost_type: |
              This is a cost_type
            status: opened
            transaction_date: 2017-07-21T17:32:28Z
    CostTypes:
      title: costTypes
      description: CostType data
      required:
        - cid
        - ctype
      type: object
      properties:
        cid:
          type: string
          description: A cost type doel organisation code
        ctype:
          type: string
      example: |-
        {
            "cid": "410200",
            "ctype": "Omschrijving"
        }
    BookingFile:
      title: Exported files
      description: Booking File Exported data
      type: object
      properties:
        export_date:
          type: string
        booking_file:
          type: string
        payment_file:
          type: string
      example: |-
        {
          "booking_file": "http://127.0.0.1:5000/finances/expenses/documents/booking.csv/kinds/booking_file",
          "export_date": "2019-10-01T06:07:19.188000+00:00",
          "payment_file": "http://127.0.0.1:5000/finances/expenses/documents/booking/kinds/payment_file"
        }
  parameters:
    DocumentDate:
      name: document_date
      schema:
        type: string
      in: path
      required: true
    ExpensesId:
      style: simple
      explode: false
      name: expenses_id
      schema:
        type: integer
      in: path
      required: true
    AttachmentName:
      style: simple
      name: attachments_name
      schema:
        type: string
      in: path
      required: true
    EmployeeId:
      style: simple
      explode: false
      name: employee_id
      schema:
        type: string
      in: path
      required: true
    DepartmentId:
      style: simple
      explode: false
      name: department_id
      schema:
        type: string
      in: path
      required: true
    DocumentId:
      style: simple
      explode: false
      name: document_id
      schema:
        type: string
      in: path
      required: true
    DocumentType:
      style: simple
      explode: false
      name: document_type
      schema:
        type: string
      in: path
      required: true
    ExpensesList:
      style: simple
      explode: false
      name: expenses_list
      description: Type of expenses to be returned
      schema:
        default: "expenses_creditor_approved"
        type: string
      in: query
      required: false
  requestBodies:
    formData:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExpenseData'
      required: true
    attachmentData:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AttachmentData'
  securitySchemes:
    oauth2:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        implicit:
          authorizationUrl: >-
            https://azuread.url/2.0/authorize
          scopes:
            creditor.write: Write all expenses and documents
            finance.expenses: Read expense and document information
            controller.write: Read all expense information
      x-tokenInfoFunc: openapi_server.controllers.security_controller_.info_from_oAuth2
      x-scopeValidateFunc: connexion.decorators.security.validate_scope
