---
openapi: 3.0.2
x-zally-ignore: [101, 104, 105, 146, 151]
info:
  title: Expenses API
  version: "1.0"
  description: An API for the expenses app
  contact:
    name: VolkerWessels Telecom
    url: "https://www.vwtelecom.com"
    email: info@vwt.digital
  license:
    name: GNU GPLv3
    url: "https://www.gnu.org/licenses/gpl.txt"
  x-audience: company-internal
  x-api-id: 1b66bb9e-5b02-49f1-8cf9-bc3f649d70a6
servers:
  - url: /
paths:
  /employees/expenses:
    post:
      requestBody:
        $ref: "#/components/requestBodies/formData"
      responses:
        "201":
          description: Successfuly made or updated an expense
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        default:
          description: Expense Made/Updated successfully!
      security:
        - oauth2: [finance.expenses]
      operationId: add_expense
      summary: Make expense
      description: Create an expense
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /employees/cost-types:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CostTypes"
              examples:
                CostTypes:
                  value:
                    - ctype: "some text"
                      cid: "some id"
                      description:
                        nl: "some text"
                      managertype: "some text"
                      message:
                        nl:
                          long: "Vul dit veld in"
          description: Successful response - returns all cost-types
        default:
          description: Cost-types retrieved successfully
      security:
        - oauth2: [finance.expenses]
      operationId: get_cost_types
      summary: Get all cost_types
      description: Retrieve all cost_types
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /employees/expenses/{expenses_id}/attachments:
    get:
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          description: Successfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UrlArray"
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
      summary: Get attachments by expense id
      operationId: get_attachment_employee
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    post:
      requestBody:
        $ref: "#/components/requestBodies/attachmentData"
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          description: Successfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UrlArray"
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
      summary: Get attachments by expense id
      operationId: add_attachment_employee
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /employees/expenses/{expenses_id}/attachments/{attachments_name}:
    delete:
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
        - $ref: "#/components/parameters/AttachmentName"
      responses:
        "200":
          description: Succesfully deleted attachment for expense
      summary: Delete attachment by expense id and attachment name
      operationId: delete_attachment
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /employees/{employee_id}/expenses:
    get:
      parameters:
        - $ref: "#/components/parameters/EmployeeId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDataArray"
              examples:
                ExpenseDataArray:
                  value:
                    Expenses:
                      - amount: ""
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28.000Z
                      - amount: ""
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28.000Z
          description: Successful response - returns all expenses of a logged in employee
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
        default:
          description: Response Successfully Executed
      security:
        - oauth2: [finance.expenses]
      operationId: get_employee_expenses
      summary: Get all expenses belonging to a specific logged in employee
      description: Retrieve all expenses for a logged in employee
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /employees/expenses/{expenses_id}:
    get:
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseSingle"
          description: Successful response - returns information of expense
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
        default:
          description: Expense Success
      security:
        - oauth2: [finance.expenses]
      operationId: get_expenses_employee
      summary: Get information from expenses by id
      description: Retrieve an expense
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    put:
      summary: Update expense
      operationId: update_expenses_employee
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/Status"
        required: true
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          description: Updated expense
        default:
          description: Status of an expense has been updated
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /employees/profiles:
    get:
      responses:
        "200":
          description: Successful response - returns object with employee profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployeeProfile"
        "400":
          description: Invalid input
        "401":
          description: Provided token is invalid
        "403":
          description: Provided token does not have the required scope
        default:
          description: Profile returned successfully!
      security:
        - oauth2: [finance.expenses]
      operationId: get_employee_profile
      summary: Get employee profile
      description: Get an employee profile
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    post:
      requestBody:
        $ref: "#/components/requestBodies/EmployeeProfile"
      responses:
        "201":
          description: Successfuly added/updated a profile
        "400":
          description: Invalid input
        "401":
          description: Provided token is invalid
        "403":
          description: Provided token does not have the required scope
        default:
          description: Profile added/updated successfully!
      security:
        - oauth2: [finance.expenses]
      operationId: add_employee_profile
      summary: Add/update employee profile
      description: Add or update an employee profile
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    x-eac-ignore: true
  /employees/register-push-tokens:
    post:
      requestBody:
        $ref: "#/components/requestBodies/pushToken"
      responses:
        "201":
          description: Successfuly registered a push token
        "400":
          description: Invalid input
        "401":
          description: Provided token is invalid
        "403":
          description: Provided token does not have the required scope
        default:
          description: Push token registered successfully!
      security:
        - oauth2: [finance.expenses]
      operationId: register_push_token
      summary: Register a push token
      description: Register a mobile push token for a user
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    x-eac-ignore: true
  /finances/documents:
    get:
      operationId: get_document_list
      summary: Get a list of all booking and payment files
      responses:
        "200":
          description: Download Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingFile"
        "401":
          description: The unauthorized client is not allowed to access the authorization grant type.
        "400":
          description: A missing parameter or, unsupported parameter value.
        "403":
          description: The Access token does not have the required scope
        default:
          description: List of files got Successfully OK
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    post:
      operationId: create_booking_and_payment_file
      summary: Creates a single booking and payment document containing all expenses ready for payment.
      responses:
        "200":
          description: Download Success
        "401":
          description: >
            The unauthorized client is not allowed to access
            the authorization grant type.
        "400":
          description: A missing parameter or, unsupported parameter value.
        "403":
          description: The Access token does not have the required scope
        default:
          description: Booking file made Successfully OK
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /finances/expenses/documents/{document_id}/kinds/{document_type}:
    get:
      operationId: get_document
      summary: Returns a CSV => of a booking file or XML => of payment file
      parameters:
        - $ref: "#/components/parameters/DocumentId"
        - $ref: "#/components/parameters/DocumentType"
      responses:
        "200":
          description: Download Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingFile"
        "401":
          description: The unauthorized client is not allowed to access the authorization grant type.
        "400":
          description: A missing parameter or, unsupported parameter value.
        "403":
          description: The Access token does not have the required scope
        "404":
          description: Document id or type not found
        default:
          description: Document file successfully retrieved
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    x-eac-ignore: true
  /finances/expenses/{expenses_id}:
    put:
      summary: Update expense
      operationId: update_expenses_creditor
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/Status"
        required: true
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          description: Updated expense
        default:
          description: Status of an expense has been updated
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    get:
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseSingle"
          description: Successful response - returns information of expense
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
        default:
          description: Expense Success
      security:
        - oauth2: [creditor.write]
      operationId: get_expenses_creditor
      summary: Get information from expenses by id
      description: Retrieve an expense
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /finances/expenses/{expenses_id}/attachments:
    get:
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          description: Successfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UrlArray"
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
      summary: Get attachments by expense id
      operationId: get_attachment_creditor
      security:
        - oauth2: [creditor.write]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /finances/expenses:
    get:
      parameters:
        - $ref: "#/components/parameters/ExpensesList"
        - $ref: "#/components/parameters/DateFrom"
        - $ref: "#/components/parameters/DateTo"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDataArray"
              examples:
                ExpenseDataArray:
                  value:
                    Expenses:
                      - amount: ""
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28.000Z
                      - amount: ""
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28.000Z
            text/csv:
              schema:
                $ref: "#/components/schemas/ExportFile"
          description: Successful response - returns all expenses
        default:
          description: Response Successfully Executed
      security:
        - oauth2: [creditor.write]
      operationId: get_all_creditor_expenses
      summary: Get all expenses
      description: Retrieve all expenses meant for creditor or retrieve file with all expenses
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /finances/expenses/journals:
    get:
      parameters:
        - $ref: "#/components/parameters/DateFrom"
        - $ref: "#/components/parameters/DateTo"
      responses:
        "200":
          content:
            text/csv:
              schema:
                $ref: "#/components/schemas/ExportFile"
          description: Successful response - returns export file with all journal expenses
        default:
          description: Response Successfully Executed
      security:
        - oauth2: [creditor.write]
      operationId: get_all_creditor_expenses_journal
      summary: Get csv with all expenses from expenses_journal
      description: Retrieve csv with expenses from expenses_journal
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    x-eac-ignore: true
  /managers/expenses:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDataArray"
              examples:
                ExpenseDataArray:
                  value:
                    Expenses:
                      - amount: ""
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28.000Z
                      - amount: ""
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28.000Z
          description: Successful response - returns all expenses
        default:
          description: Response Successfully Executed
      security:
        - oauth2: [finance.expenses]
      operationId: get_managers_expenses
      summary: Get all expenses for approval of a specific manager
      description: Retrieve all expenses for a given manager
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /managers/expenses/{expenses_id}:
    put:
      summary: Update expense
      operationId: update_expenses_manager
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/Status"
        required: true
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          description: Updated expense
        default:
          description: Status of an expense has been updated
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    get:
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseSingle"
          description: Successful response - returns information of expense
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
        default:
          description: Expense Success
      security:
        - oauth2: [finance.expenses]
      operationId: get_expenses_manager
      summary: Get information from expenses by id
      description: Retrieve an expense
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /managers/expenses/{expenses_id}/attachments:
    get:
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          description: Successfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UrlArray"
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
      summary: Get attachments by expense id
      operationId: get_attachment_manager
      security:
        - oauth2: [finance.expenses]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /managers/rejection-notes:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectionNotes"
              examples:
                RejectionNotes:
                  value:
                    - form: "dynamic"
                      rnote: "Anders, reden:"
                      rnote_id: 4
                      translations:
                        de: "Anderer Grund:"
                        en: "Other reason:"
                        nl: "Andere reden:"
          description: Successful response - returns all rejection notes
        default:
          description: Rejection notes retrieved successfully
      security:
        - oauth2: [finance.expenses]
      operationId: get_rejection_notes
      summary: Get all rejection_notes
      description: Retrieve all rejection_notes
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /controllers/expenses:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDataArray"
              examples:
                ExpenseDataArray:
                  value:
                    Expenses:
                      - amount: ""
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28.000Z
                      - amount: ""
                        note: some text
                        cost_type: some text
                        transaction_date: 2017-07-21T17:32:28.000Z
          description: Successful response - returns all expenses
        default:
          description: Response Successfully Executed
      security:
        - oauth2: [controller.write]
      operationId: get_controller_expenses
      summary: Get all expenses
      description: Get all expenses for controllers
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
  /controllers/expenses/{expenses_id}:
    get:
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseSingle"
          description: Successful response - returns information of expense
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
        default:
          description: Expense Success
      security:
        - oauth2: [controller.write]
      operationId: get_expenses_controller
      summary: Get information from expenses by id
      description: Retrieve an expense
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
    x-eac-ignore: true
  /controllers/expenses/{expenses_id}/attachments:
    get:
      parameters:
        - $ref: "#/components/parameters/ExpensesId"
      responses:
        "200":
          description: Successfully received all attachments for expense
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UrlArray"
        "400":
          description: "Invalid input"
        "401":
          description: "Provided token is invalid"
        "403":
          description: "Provided token does not have the required scope"
        "404":
          description: "Non-existing expenses_id"
      summary: Get attachments by expense id
      operationId: get_attachment_controllers
      security:
        - oauth2: [controller.write]
      x-openapi-router-controller:
        openapi_server.controllers.expense_controllers
components:
  schemas:
    Url:
      properties:
        url:
          type: string
      example:
        url: "https://gcp.com/img.png"
    UrlArray:
      title: Root Type for UrlArray
      description: Array of urls of attachments
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/Url"
    Status:
      description: Status for expense
      properties:
        status:
          type: string
          enum:
            - draft
            - ready_for_creditor
            - ready_for_manager
            - rejected_by_manager
            - rejected_by_creditor
            - exported
            - cancelled
            - approved
        creditor_note:
          type: string
        manager_note:
          type: string
        amount:
          format: decimal
          type: number
          minimum: 0.01
        note:
          type: string
        cost_type:
          type: string
        transaction_date:
          type: string
          format: date-time
        rnote_id:
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
        rnote:
          type: string
      required:
        - status
      example:
        status: "rejected_by_creditor"
        creditor_note: "Wrong amount"
    AttachmentData:
      title: attachmentData
      description: form data for single attachment
      type: object
      properties:
        name:
          type: string
        content:
          type: string
          format: byte
          pattern: "(?<=^data:)(image/png|image/jpeg|image/jpg|application/pdf)(?=;base64,)"
      example:
        name: "somename"
        content: "b64 string"
    ExpenseData:
      title: expenseData
      description: Form data to an expense
      required:
        - amount
        - note
        - cost_type
        - transaction_date
      type: object
      properties:
        amount:
          format: decimal
          type: number
          minimum: 0.01
        note:
          type: string
        cost_type:
          type: string
        transaction_date:
          type: string
          format: date-time
      example:
        note: "This is a note"
        id: "R1rt2345"
        amount: 45.56
        cost_type: "Office Utilities"
        transaction_date: "2017-07-21T17:32:280Z"
    ExpenseDataArray:
      title: Root Type for ExpenseDataArray
      description: Array of expense data
      type: object
      properties:
        expenses:
          type: array
          items:
            $ref: "#/components/schemas/ExpenseData"
      example:
        Expenses:
          - note: This is a note
            id: R1rt2345
            amount: 45.56
            cost_type: This is a cost_type
            status: rejected_by_creditor
            transaction_date: 2017-07-21T17:32:28.000Z
          - note: This is a notes
            id: R1rt23f45
            amount: 45.16
            cost_type: This is a cost_type
            status: ready_for_creditor
            transaction_date: 2017-07-21T17:32:28.000Z
    ExpenseSingle:
      title: expenseSingle
      description: Expense to retrieve
      type: object
      properties:
        amount:
          format: decimal
          type: number
          minimum: 0.01
        claim_date:
          type: string
          format: date-time
        cost_type:
          type: string
        employee:
          type: string
        flags:
          type: object
        id:
          type: string
        note:
          type: string
        status:
          type: object
        transaction_date:
          type: string
          format: date-time
      example:
        amount: 99
        claim_date: "2020-01-01T12:00:00Z"
        cost_type: "123456"
        employee: "Puk, Pietje"
        flags:
          duplicates:
            2234567891011120
            3234567891011120
        id: 1234567891011120
        note: "Test"
        status:
          text: "draft"
        transaction_date: "2020-01-01T12:00:00Z"
    CostTypes:
      title: costTypes
      description: CostType data
      required:
        - cid
        - ctype
        - description
      type: object
      properties:
        cid:
          type: string
          description: A cost type ID
        ctype:
          type: string
          description: Description cost-type (old)
        description:
          type: object
          description: Descriptions cost-type
        managertype:
          type: string
          description: A manager type to differentiate different lines of managers
        message:
          type: object
          description: Different messages for different languages
      example:
        - cid: "410200"
          ctype: "Omschrijving"
          description:
            nl: "Omschrijving"
          managertype: "linemanager"
          message:
            nl:
              long: "Vul dit veld in"
    RejectionNotes:
      title: Rejection notes
      description: Rejection notes data
      required:
        - form
        - rnote
        - rnote_id
        - translations
      type: object
      properties:
        form:
          type: string
          enum:
            - "dynamic"
            - "static"
        rnote:
          type: string
        rnote_id:
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
        translations:
          type: object
          description: Translations rejection note per locale
      example:
        - form: "dynamic"
          rnote: "Anders, reden:"
          rnote_id: 4
          translations:
            de: "Anderer Grund:"
            en: "Other reason:"
            nl: "Andere reden:"
    BookingFile:
      title: Exported files
      description: Booking File Exported data
      type: object
      properties:
        export_date:
          type: string
        booking_file:
          type: string
        payment_file:
          type: string
      example:
        - booking_file: "http://127.0.0.1:5000/finances/expenses/documents/booking.csv/kinds/booking_file"
          export_date: "2019-10-01T06:07:19.188000+00:00"
          payment_file: "http://127.0.0.1:5000/finances/expenses/documents/booking/kinds/payment_file"
    ExportFile:
      title: Export file expenses
      description: File All Exported Data
      type: object
      properties:
        export_file:
          type: string
    EmployeeProfile:
      title: Employee profile
      description: Employee profile
      type: object
      required:
        - locale
      properties:
        locale:
          type: string
          enum:
            - nl
            - en
            - de
      example:
        locale: "nl"
    PushToken:
      title: Push token
      description: Mobile push token to be registered per user
      type: object
      required:
        - app_version
        - os_platform
        - os_version
      properties:
        push_token:
          type: string
          maxLength: 255
        app_version:
          type: string
          pattern: '^(\d+\.)?(\d+\.)?(\*|\d+)$'
        os_platform:
          type: string
          enum:
            - iOS
            - Android
        os_version:
          type: string
          pattern: '^(\d+\.)?(\d+\.)?(\*|\d+)$'
      example:
        push_token: "e820497f-bb08-4e92-9193-1dbdcc603d4b"
        app_version: "1.0"
        os_platform: "iOS"
        os_version: "13.4"
  parameters:
    DocumentDate:
      name: document_date
      schema:
        type: string
      in: path
      required: true
    ExpensesId:
      style: simple
      explode: false
      name: expenses_id
      schema:
        type: integer
        minimum: 1
        maximum: 9223372036854775807
      in: path
      required: true
    AttachmentName:
      style: simple
      name: attachments_name
      schema:
        type: string
      in: path
      required: true
    EmployeeId:
      style: simple
      explode: false
      name: employee_id
      schema:
        type: string
      in: path
      required: true
    DateFrom:
      style: form
      explode: false
      name: date_from
      schema:
        type: string
        format: date
        default: "1970-01-01"
      in: query
      required: false
    DateTo:
      style: form
      explode: false
      name: date_to
      schema:
        type: string
        format: date
        default: "1970-01-01"
      in: query
      required: false
    DepartmentId:
      style: simple
      explode: false
      name: department_id
      schema:
        type: string
      in: path
      required: true
    DocumentId:
      style: simple
      explode: false
      name: document_id
      schema:
        type: string
        format: date-time
      in: path
      required: true
    DocumentType:
      style: simple
      explode: false
      name: document_type
      schema:
        type: string
        enum:
          - payment_file
          - booking_file
      in: path
      required: true
    ExpensesList:
      style: form
      explode: false
      name: expenses_list
      description: Type of expenses to be returned
      schema:
        default: "expenses_creditor"
        type: string
      in: query
      required: false
  requestBodies:
    formData:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ExpenseData"
      required: true
    attachmentData:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AttachmentData"
    EmployeeProfile:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EmployeeProfile"
    pushToken:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PushToken"
  securitySchemes:
    oauth2:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        implicit:
          authorizationUrl: https://azuread.url/2.0/authorize
          scopes:
            leasecoordinator.write: Read filtered expense and document information
            finance.expenses: Read expense and document information
            creditor.write: Write all expenses and documents
            controller.write: Read all expense information
      x-tokenInfoFunc:
        openapi_server.controllers.security_controller_.info_from_oAuth2
      x-scopeValidateFunc: connexion.decorators.security.validate_scope
