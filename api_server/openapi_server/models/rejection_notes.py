# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class RejectionNotes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, translations=None):  # noqa: E501
        """RejectionNotes - a model defined in OpenAPI

        :param translations: The translations of this RejectionNotes.  # noqa: E501
        :type translations: object
        """
        self.openapi_types = {
            'translations': object
        }

        self.attribute_map = {
            'translations': 'translations'
        }

        self._translations = translations

    @classmethod
    def from_dict(cls, dikt) -> 'RejectionNotes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RejectionNotes of this RejectionNotes.  # noqa: E501
        :rtype: RejectionNotes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def translations(self):
        """Gets the translations of this RejectionNotes.

        Translations rejection note  # noqa: E501

        :return: The translations of this RejectionNotes.
        :rtype: object
        """
        return self._translations

    @translations.setter
    def translations(self, translations):
        """Sets the translations of this RejectionNotes.

        Translations rejection note  # noqa: E501

        :param translations: The translations of this RejectionNotes.
        :type translations: object
        """
        if translations is None:
            raise ValueError("Invalid value for `translations`, must not be `None`")  # noqa: E501

        self._translations = translations
