# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class EmployeeProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locale=None):  # noqa: E501
        """EmployeeProfile - a model defined in OpenAPI

        :param locale: The locale of this EmployeeProfile.  # noqa: E501
        :type locale: str
        """
        self.openapi_types = {
            'locale': str
        }

        self.attribute_map = {
            'locale': 'locale'
        }

        self._locale = locale

    @classmethod
    def from_dict(cls, dikt) -> 'EmployeeProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmployeeProfile of this EmployeeProfile.  # noqa: E501
        :rtype: EmployeeProfile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locale(self):
        """Gets the locale of this EmployeeProfile.


        :return: The locale of this EmployeeProfile.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this EmployeeProfile.


        :param locale: The locale of this EmployeeProfile.
        :type locale: str
        """
        allowed_values = ["nl", "en", "de"]  # noqa: E501
        if locale not in allowed_values:
            raise ValueError(
                "Invalid value for `locale` ({0}), must be one of {1}"
                .format(locale, allowed_values)
            )

        self._locale = locale
