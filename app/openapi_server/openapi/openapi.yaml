openapi: 3.0.2
info:
  title: Expenses API
  description: An API for the expenses app
  version: "0.1"
  contact:
    name: VolkerWessels Telecom
    email: info@vwt.digital
    url: http://www.volkerwesselstelecom.com
  license:
    name: GNU GPLv3
    url: 'https://www.gnu.org/licenses/gpl.txt'
  x-audience: company-internal
servers:
- url: /
paths:
  /expenses/{expense_id}:
    get:
      operationId: getExpenses
      summary: Get information from expenses by id
      security:
        - oAuth2: [finance.read,employee.read]
      parameters:
      - name: expense_id
        in: path
        description: The id of the expense
        required: true
        schema:
          type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expenses'
          description: Successful response - returns information of expense
      x-openapi-router-controller: openapi_server.controllers.surveys_controller

  /expenses:
    post:
      operationId: addExpenses
      summary: Make expense
      security:
        - oAuth2: [employee.write]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ammount:
                  type: number
                  format: decimal
                cost_type:
                  type: string
                note:
                  type: string
              required:
                - ammount
                - cost_type
                - note

      responses:
        200:
          description: Succesfully made or updated an expense
      x-openapi-router-controller: openapi_server.controllers.surveys_controller

    get:
      operationId: getAllExpenses
      summary: Get all expenses
      security:
        - oAuth2: [finance.read]

      responses:
        200:
          description: Succesfull response - returns all expenses
      x-openapi-router-controller: openapi_server.controllers.surveys_controller


  /expenses/attachments/{attachment_id}:
    get:
      operationId: getAttachmentsById
      summary: Get attachment by attachment id
      security:
        - oAuth2: [finance.read,employee.read]
      parameters:
      - name: attachment_id
        required: true
        in: path
        schema:
          type: integer

      responses:
        200:
          description: Succesfull response - returns attachment
      x-openapi-router-controller: openapi_server.controllers.surveys_controller

    put:
      operationId: updateAttachmentsById
      summary: Update attachment by attachment id
      security:
        - oAuth2: [finance.write,employee.write]
      parameters:
      - name: attachment_id
        required: true
        in: path
        schema:
          type: integer

      responses:
        200:
          description: Succesfully updated an attachment
      x-openapi-router-controller: openapi_server.controllers.surveys_controller

    delete:
      operationId: deleteAttachmentsById
      summary: Delete an attachment by attachment id
      security:
        - oAuth2: [finance.write,employee.write]
      parameters:
      - name: attachment_id
        required: true
        in: path
        schema:
          type: integer

      responses:
        200:
          description: Succesfully deleted an attachment
      x-openapi-router-controller: openapi_server.controllers.surveys_controller

  /expenses/attachments:
    post:
      operationId: addAttachments
      summary: Upload an attachment for your expenses
      security:
        - oAuth2: [finance.write,employee.write]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
              required:
                - image

      responses:
        200:
          description: Succesfully uploaded attachment
      x-openapi-router-controller: openapi_server.controllers.surveys_controller


  /expenses/documents/{document_id}:
    get:
      operationId: getDocumentById
      summary: Get document by document id
      security:
        - oAuth2: [finance.read,employee.read]
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: integer

      responses:
        200:
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Documents'
          description: Succesfull response - returns document
      x-openapi-router-controller: openapi_server.controllers.surveys_controller

  /expenses/documents:
    post:
      operationId: addDocument
      summary: Make new document
      security:
        - oAuth2: [finance.write,employee.write]
      requestBody:
        required: true
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Documents'

      responses:
        200:
          description: Make new document
      x-openapi-router-controller: openapi_server.controllers.surveys_controller

components:
  schemas:
    Expenses:
      description: Information for expenses
      properties:
        id:
          type: string
        ammount:
          type: number
          format: decimal
        note:
          type: string
        picture:
          type: string
          format: binary
    Documents:
      description: Information for documents
      properties:
        document:
          type: string
          format: binary
  securitySchemes:
    oAuth2:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        clientCredentials:
          authorizationUrl: https://api.example.com/oauth2/authorize
          scopes:
            finance.read: Read all expenses and documents
            finance.write: Write all expenses and documents
            employee.read: Read expense and document information
            employee.write: Write expenses and documents